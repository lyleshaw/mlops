// Code generated by hertz generator.

package service

import (
	"context"
	"github.com/bytedance/gopkg/util/logger"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/lyleshaw/mlops/biz/model/service"
	"github.com/lyleshaw/mlops/pkg/constants"
	"github.com/lyleshaw/mlops/pkg/utils"
)

// SendCode .
// @router /api/v1/email/code [POST]
func SendCode(_ context.Context, c *app.RequestContext) {
	var err error
	var req service.SendCodeReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(400, err.Error())
		return
	}

	code, err := utils.SendEmail(req.Email)
	logger.Infof("send email to %s, code: %s", req.Email, code)
	constants.EmailCode[req.Email] = code
	if err != nil {
		logger.Errorf("send email error: %v", err)
		c.String(500, "internal server error")
		return
	}

	resp := &service.BaseResp{
		Code:    0,
		Message: "success",
	}
	c.JSON(200, resp)
}
